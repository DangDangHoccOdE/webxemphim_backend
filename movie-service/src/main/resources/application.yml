server:
  port: 0

spring:
  application:
    name: movieService
  datasource:
    username: 'postgres'
    url: jdbc:postgresql://localhost:5432/booking_movie
    password: Damg972004@
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'true'
    hibernate:
      ddl-auto: update
    show-sql: 'true'
  # Kafka
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.example.movieService.entity.dto.EmailMessageKafkaDto
        topic:
          name: email_topics

management:
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  server:
    port: 8000

resilience4j:
    circuitbreaker:
      instances:
        inventory:
          register-health-indicator: true
          event-consumer-buffer-size: 10
          sliding-window-type: COUNT_BASED
          sliding-window-size: 5
          failure-rate-threshold: 50
          wait-duration-in-open-state: 5s
          permitted-number-of-calls-in-half-open-state: 3
          automatic-transition-from-open-to-half-open-enabled: true
    retry:
      instances:
        inventory:
          max-attempts: 3
          wait-duration: 5s

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:eureka@localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true



